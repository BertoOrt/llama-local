'use strict';

var app = angular.module('app', ['ngAnimate', 'ui.router', 'ipCookie']);

app.config(['$stateProvider', '$urlRouterProvider', '$locationProvider', function ($stateProvider, $urlRouterProvider, $locationProvider) {
  $stateProvider.state('home', {
    url: '/',
    templateUrl: 'partials/home.html',
    controller: 'home'
  }).state('signup', {
    url: '/signup',
    templateUrl: 'partials/signup.html',
    controller: 'signup'
  }).state('search', {
    url: '/search',
    templateUrl: 'partials/search.html',
    controller: 'search'
  }).state('error', {
    url: '/error',
    templateUrl: 'partials/error.html'
  }).state('user', {
    url: '/:user',
    templateUrl: 'partials/user.html',
    controller: 'user'
  });
  $urlRouterProvider.otherwise('/');
  $locationProvider.html5Mode(true);
}]);

app.directive('myDropdown', function () {
  return {
    link: function link() {
      return $('.ui.dropdown').dropdown();
      alert('work');
    }
  };
});

app.factory('AuthUser', ['$http', '$location', 'ipCookie', '$q', function ($http, $location, ipCookie, $q) {
  var authuser = {};
  authuser.signup = function (data) {
    var deferred = $q.defer();
    $http.post('//localhost:3000/signup', data).success(function (response, stat) {
      if (response.status == "ok") {
        ipCookie('user', response.id);
        $location.path('/' + response.id);
      } else {
        deferred.resolve(true);
      }
    }).error(function (data) {
      $location.path('/error');
    });
    return deferred.promise;
  };
  authuser.logout = function () {
    ipCookie.remove('user');
    $location.path('/');
  };
  authuser.login = function (data) {
    $http.post('//localhost:3000/login', data).success(function (response, stat) {
      if (response.status == "ok") {
        $('.ui.modal').modal('hide all');
        ipCookie('user', response.id);
        $location.path('/' + response.id);
      } else {
        return true;
      }
    }).error(function (data) {
      $location.path('/error');
    });
  };
  authuser.check = function () {
    var cookie = ipCookie('user');
    if (!cookie) {
      return false;
    }
    return true;
  };
  authuser.authenticate = function () {
    var promise = $q.defer();
    var url = $location.path().substring(1);
    var cookie = ipCookie('user');
    var data = { url: url, cookie: cookie };
    $http.post('//localhost:3000/user/auth', data).success(function (response, stat) {
      if (response.status == "ok") {
        return promise.resolve(true);
      } else {
        return false;
      }
    }).error(function (data) {
      return false;
    });
    return promise.promise;
  };
  return authuser;
}]);

app.controller('home', ['$scope', '$http', '$location', 'AuthUser', 'ipCookie', function ($scope, $http, $location, AuthUser, ipCookie) {
  $scope.loggedIn = AuthUser.check();
  if ($scope.loggedIn) $scope.userId = ipCookie('user');
  $scope.modal = function () {
    $('.ui.basic.modal.home').modal('show');
  };
  $scope.login = function () {
    $scope.loginSubmitted = true;
    var data = { email: $scope.loginEmail, password: $scope.loginPassword };
    var result = AuthUser.login(data);
    if (result) {
      $scope.invalidPassword = true;
    }
  };
}]);

app.controller('signup', ['$scope', '$http', '$location', 'ipCookie', 'AuthUser', function ($scope, $http, $location, ipCookie, AuthUser) {
  $scope.loggedIn = AuthUser.check();
  if ($scope.loggedIn) $location.path('/');
  $scope.modal = function () {
    $('.ui.basic.modal.signup').modal('show');
  };
  $scope.signup = function () {
    $scope.submitted = true;
    var country = $('.text').text();
    if (country === "Select Country") {
      country = "United States";
    };
    var data = { email: $scope.email, country: country, password: $scope.password };
    $scope.submitted = true;
    AuthUser.signup(data).then(function (result) {
      if (result) {
        $scope.submitted = false;
        $scope.invalidEmail = true;
      } else {
        $scope.submitted = false;
      }
    });
  };
  $scope.login = function () {
    $scope.loginSubmitted = true;
    var data = { email: $scope.loginEmail, password: $scope.loginPassword };
    var result = AuthUser.login(data);
    if (result) {
      $scope.invalidPassword = true;
    }
  };
}]);

app.controller('search', ['$scope', function ($scope) {
  $scope.loggedIn = AuthUser.check();
}]);

app.controller('user', ['$scope', '$http', 'ipCookie', '$location', 'AuthUser', function ($scope, $http, ipCookie, $location, AuthUser) {
  $scope.loggedIn = AuthUser.check();
  AuthUser.authenticate().then(function (result) {
    $scope.owner = result;
  });
  $scope.addingReview = false;
  $scope.addingPost = false;
  $scope.taken = false;
  $scope.newPackage = false;
  $scope.isChecked = 1;
  $scope.user = { id: ipCookie('user') };
  $http.post('//localhost:3000/user/info', { id: $scope.user.id, url: $location.path().substring(1) }).success(function (response, stat) {
    if (response.status == "ok") {
      $scope.user.name = response.body.name;
      $scope.user.country = response.body.country;
      $scope.user.email = response.body.email;
      $scope.user.about = response.body.about;
      $scope.user.headline = response.body.headline;
      $scope.user.language = response.body.language;
      $scope.user.packages = response.body.packages;
      $scope.user.reviews = response.body.reviews;
      if ($scope.user.packages.length == 0) {
        $scope.noPackages = true;
        $scope.user.packages = [];
      }
      if ($scope.user.reviews.length == 0) {
        $scope.noReviews = true;
        $scope.user.reviews = [];
      }
      if (response.body.reference) {
        $location.path('/' + response.body.reference);
      }
    } else {
      $location.path('/');
    }
  }).error(function (data) {
    $location.path('/error');
  });
  $scope.tab = function () {
    $('.tabular.menu .item').tab();
    $('.ui.accordion').accordion();
    $('.ui.dropdown').dropdown();
  };
  $scope.pacTab = function () {
    $('.menu .item').tab();
  };
  $scope.sidebar = function () {
    $('.tabular.menu .item').tab();
    $('.ui.accordion').accordion();
    $('.ui.sidebar').sidebar('toggle');
  };
  $scope.addReviewForm = function () {
    $scope.addingReview = !$scope.addingReview;
  };
  $scope.addPostForm = function () {
    $scope.addingPost = !$scope.addingPost;
  };
  $scope.logout = function () {
    AuthUser.logout();
  };
  $scope.submitBioForm = function () {
    var country = $('.countryDropdown').text();
    if (country !== "Select Country") {
      $scope.user.country = country;
    };
    $scope.sendingInfo = true;
    $http.post('//localhost:3000/user/editInfo', $scope.user).success(function (response, stat) {
      $scope.sendingInfo = false;
      if (response.status == "ok") {
        $('.bioTab').click();
        $('.bioMessage').fadeIn();
        setTimeout(function () {
          $('.bioMessage').fadeOut();
        }, 3000);
      } else {
        console.log('error: could not save');
      }
    }).error(function (data) {
      $location.path('/error');
    });
  };
  $scope.submitPackageForm = function () {
    $scope.sendingInfo = true;
    $scope.noPackages = false;
    $scope.user.packages.push($scope['package']);
    $http.post('//localhost:3000/user/package', { id: ipCookie('user'), 'package': $scope['package'] }).success(function (response, stat) {
      $scope.sendingInfo = false;
      if (response.status == "ok") {
        $scope['package'] = "";
        $('.packageMessage').fadeIn();
        setTimeout(function () {
          $('.packageMessage').fadeOut();
        }, 3000);
      } else {
        console.log('error: could not save');
      }
    }).error(function (data) {
      $location.path('/error');
    });
  };
  $scope.changeUrl = function () {
    var data = { id: ipCookie('user'), url: $scope.url };
    $http.post('//localhost:3000/user/url', data).success(function (response) {
      if (response.status == "ok") {
        $location.path('/' + response.reference);
      } else {
        $scope.taken = true;
      }
    }).error(function (data) {
      $location.path('/error');
    });
  };
  $scope.editPackage = function () {
    $http.post('//localhost:3000/user/editPackage', { id: ipCookie('user'), 'package': this['package'] }).success(function (response, stat) {
      $scope.sendingInfo = false;
      if (response.status == "ok") {
        $('.packageTab').click();
        $('.packageMessage').fadeIn();
        setTimeout(function () {
          $('.packageMessage').fadeOut();
        }, 3000);
      } else {
        console.log('error: could not save');
      }
    }).error(function (data) {
      $location.path('/error');
    });
  };
  $scope.togglePackageForm = function () {
    $scope.newPackage = !$scope.newPackage;
  };
  $scope.removePackage = function (i) {
    $scope.user.packages.splice(i, 1);
    $http.post('//localhost:3000/user/removePackage', { id: ipCookie('user'), 'package': this['package'] }).success(function (response, stat) {
      $scope.sendingInfo = false;
      if (response.status == "ok") {
        console.log('deleted');
      } else {
        console.log('error: could not save');
      }
    }).error(function (data) {
      $location.path('/error');
    });
  };
  $scope.submitReview = function () {
    $scope.addingReview = !$scope.addingReview;
    $scope.user.reviews.push({ badge: $scope.isChecked, review: $scope.reviewText, by: ipCookie('user'), byName: 'You!' });
    console.log('submitted', $scope.isChecked, $scope.reviewText);
    $scope.noReviews = false;
    $http.post('//localhost:3000/user/addReview', { id: ipCookie('user'), reference: $location.path().substring(1), badge: $scope.isChecked, review: $scope.reviewText }).success(function (response) {
      $scope.isChecked = '';
      $scope.reviewText = '';
    }).error(function (data) {
      $location.path('/error');
    });
  };
}]);

$(document).ready(function () {
  if (window.location.hash && window.location.hash == '#_=_') {
    window.location.hash = '';
  }
  $(window).scroll(function () {
    if ($(window).scrollTop() > 80) {
      $('.nav').addClass('navbar-fixed');
      $('.logo').css('width', '35px');
      $('.logo').css('height', '30px');
      $('.nav-tabs').css('padding-top', '1%');
    }
    if ($(window).scrollTop() < 80) {
      $('.nav').removeClass('navbar-fixed');
      $('.logo').css('width', '60px');
      $('.logo').css('height', '50px');
      $('.nav-tabs').css('padding-top', '2%');
    }
  });
});